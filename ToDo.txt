Allow FluidSim.c to create an windowed application where I could display some graphic
0. Set up openGL. Done
1. Pure graphic from code. Find how to the window sizes work. Done
2. Setup proper files: shader.cpp, fluidsim.cpp, etc. Done
3. Test: OpenGL for my purpose. Have empty background, shade in a decaying trace along the mouse. Done
4. Set up the simulation class. With only density map. Done
5. Render the density map with coloring. Stupid red channel bug splashed -> do it with FluidSim.dens now
6. Make density map interactable. By 


X. Test: Display some data supplied by a function(FluidSim)
X. Package everything needed to build necessary libraries that let any user on "any" platform do make/compile an executable.
X. Framebuffers: Write the density info directly to a texture.
X. Adjust simulation with a change in window size?

Note: Make simulation size = texture size.
If larger, some part of the density map will get cliped.
If smaller, ok, a pixel in density map will become a chunk in texture.

...


--------------------------------------------------------------------
Save point:
-- OpenGl site, wiki
-- ***** Get some visuals *****



--------------------------------------------------------------------
Windows Installation:
GLFW 
  Download From Source
  
  Get CMAKE
    Download installer
  
  Build using CMAKE
  
  make installer -> creates /include and /lib files that gets included in Makefile. This is located in program Files X86
  -> installed

GLAD
  Download from site: select version, preferences

  Put glad's /include into GLFW's include files
  Put glad.c into project directorry
  Link all in Makefile
  -> Done

FluidSim.cpp, version that opens up a window and draw a triangle works.
OpenGL Tutorial: Enough Done
Shader + mouse input: get a working window that traces mouse trail.

